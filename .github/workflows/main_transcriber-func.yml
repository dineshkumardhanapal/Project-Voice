name: Deploy Azure WebApp (Frontend)

on:
  push:
    branches:
      - main # Trigger on push to main branch
    paths:
      - 'frontend/**' # Only trigger if changes are in the frontend directory

env:
  AZURE_WEBAPP_NAME: your-transcriber-webapp # Replace with your App Service name
  PYTHON_VERSION: '3.10' # Must match your App Service runtime version
  STARTUP_COMMAND: 'gunicorn --bind 0.0.0.0 --timeout 600 app:app' # Command to start Flask app with Gunicorn

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Setup Python Version'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install -r frontend/requirements.txt # Adjust if requirements.txt is at root of frontend folder

      - name: 'Zip Web App content'
        run: |
          cd frontend
          zip -r ../webapp.zip .
          cd ..

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # See GitHub Secrets setup below

      - name: 'Deploy Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production' # Or your specific slot name
          package: './webapp.zip'
          # Optional: startup-command is crucial for Python apps on App Service Linux
          startup-command: ${{ env.STARTUP_COMMAND }}
          # publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} # Alternative to creds

      - name: 'Logout from Azure'
        run: az logout
