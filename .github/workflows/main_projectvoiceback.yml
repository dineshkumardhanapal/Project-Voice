name: Deploy Azure WebApp (Frontend)

on:
  push:
    branches:
      - main # Trigger on push to the main branch
    paths:
      - 'frontend/**' # Only trigger if changes are in the 'frontend' directory

env:
  AZURE_WEBAPP_NAME: your-transcriber-webapp # <--- REPLACE with your App Service name
  PYTHON_VERSION: '3.10' # Must match your App Service runtime version
  # Command to start your Flask app with Gunicorn (essential for Python on App Service Linux)
  STARTUP_COMMAND: 'gunicorn --bind 0.0.0.0 --timeout 600 app:app' 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: 'Setup Python Version'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 'Install frontend dependencies'
        run: |
          python -m pip install --upgrade pip
          # Assuming requirements.txt is directly in the 'frontend/' directory
          pip install -r frontend/requirements.txt

      - name: 'Zip Web App content'
        run: |
          # Change directory to the 'frontend' folder and zip its contents
          cd frontend
          zip -r ../webapp.zip .
          cd .. # Go back to the root of the repository

      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          # This secret holds the Azure Service Principal credentials
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production' # You can change this if you use deployment slots
          package: './webapp.zip' # Path to the zipped package relative to the repo root
          startup-command: ${{ env.STARTUP_COMMAND }} # Command to start the Flask application

      - name: 'Logout from Azure'
        run: az logout
